2: 回文链表
描述
“回文”指正读反读均相同的字符序列，如“abcdcba”和“abba”均是回文，使用栈这种数据结构判断给定字符序列是否为回文，要求使用链栈实现。

输入
一个字符序列，字符序列长度≤1000

输出
输出为true/false，分别表示输入的字符序列是否为回文

样例
输入

abcda
输出

false







#include<stdio.h> 
#include <string.h>
#define StackSize 10
#define MAXSIZE 10
typedef struct
{
    char data[StackSize];
    int top; 
}SqStack;

void InitStack(SqStack *S)
{ 
    S->top=-1;
}

int StackEmpty(SqStack S)
{ 
    if (S.top==-1)
        return 1;
    else
        return 0;
}

int Push(SqStack *S,char e)
{
    if(S->top == StackSize -1)
    {
        return 0;
    }
    S->top++;
    S->data[S->top]=e;
    return 1;
}

char Pop(SqStack *S)
{ 
    if(S->top==-1)
        return 0;
    char e=S->data[S->top];
    S->top--;
    return e;
}
int JudgeHuiWen(char *str)
{
	SqStack s;
	InitStack(&s);
	int i; 
	char temp;
	int len=strlen(str);
	for(i=0;i<len/2;i++)
		Push(&s,str[i]);
	if(len%2==1)i++;
	while(!StackEmpty(s))
	{
		temp=Pop(&s);
		if(temp!=str[i]) return 0;
		else i++;
	}
	return 1;
}

int main()
{
	char str[MAXSIZE];
    scanf("%s",&str);
	int judge=JudgeHuiWen(str);
	if(judge==1)
		printf("true");
	else
		printf("false");
}