4: 数组与串-冰雹猜想
题目描述
给出一个正整数 n，然后对这个数字一直进行下面的操作：如果这个数字是奇数，那么将其乘 3 再加 1，否则除以 2。经过若干次循环后，最终都会回到 1。经过验证很大的数字（7*10^{11}）都可以按照这样的方式比变成 1，所以被称为“冰雹猜想”。例如当 n 是 2020，变化的过程是20→10→5→16→8→4→2→1。

输入描述
输入一个正整数 n。

输出描述
输出若干个由空格隔开的正整数，表示从最后的 1 开始倒序的变化数列。

输入输出样例
输入：20
输出：1 2 4 8 16 5 10 20

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int c[10000] = { 0 };
    int m;
    int i = 1;
    cin >> m;
    c[0] = m;
    while (m != 1) {
        if (m % 2 != 0) {//判断是否是奇数
            m = m * 3 + 1;
        }
        else {
            m = m/2;
        }
        c[i] = m;
        i++;
    }
    for (i=i-1; i >= 0; i--) {
        cout << c[i] << " ";
    }
    return 0;
 
}