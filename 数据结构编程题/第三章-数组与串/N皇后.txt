题目描述
按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。

n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。

给你一个整数 n ，返回所有不同的 n 皇后问题 的解决方案。

题目难度 LeetCode+简单

输入描述
输入一个数组

输出描述
输出方案总数

输入输出样例
输入：n = 4
输出：2


#include <iostream>
#include <algorithm>
using namespace std;
int vis[3][45]={0},c[20]={0},tot=0,n; //c[i]表示在i行皇后放置的列的值j，主要为了打印结果;vis[3][]是用来判断的数组，tot存放答案

void dfs(int r)
{
    if(r==n) tot++;  //递归边界，走到最后一行说明方案可行，tot++
    else for(int i=0;i<n;i++){   //在r行逐列尝试放皇后
        if(!vis[0][i] && !vis[1][r+i] && !vis[2][r-i+n]){ //如果(r,i)格子的三个方向都没有皇后
            c[r] = i; //在i列放置皇后，如果不用打印解，可以省略整个c[]
            vis[0][i] = vis[1][r+i] = vis[2][r-i+n] = 1; //标记
            dfs(r+1);  //向下一行尝试
            vis[0][i] = vis[1][r+i] = vis[2][r-i+n] = 0; //取消标记
        }
    }
}

int main()
{
   cin>>n;
   dfs(0);
   cout<<tot<<endl;

   return 0;
}
